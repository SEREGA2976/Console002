// See https://aka.ms/new-console-template for more information
// Литералы
// Логические литералы
Console.WriteLine(true);// Выведит на консоль истину
Console.WriteLine(false);// Выведит на консоль ложь
/*
Целочисленные литералы представляют положительные и 
отрицательные целые числа, например, 1, 2, 3, 4, -7, -109. 
Целочисленные литералы могут быть выражены в десятичной, 
шестнадцатеричной и двоичной форме.
 */
Console.WriteLine(-46);
Console.WriteLine(109);
Console.WriteLine(30);
/*Числа в двоичной форме предваряются символами 0b,
*после которых идет набор из нулей и единиц.
*/
Console.WriteLine(0b11);
Console.WriteLine(0b11);
Console.WriteLine(0b10011);
/*
Для записи числа в шестнадцатеричной форме применяются символы 0x, 
после которых идет набор символов от 0 до 9 и от A до F, 
которые собственно представляют число:
*/
Console.WriteLine(0x0A);    // 10
Console.WriteLine(0xFF);    // 255
Console.WriteLine(0xA1);    // 161
/*
 * Вещественные литералы
Вещественные литералы представляют дробные числа. 
Этот тип литералов имеет две формы. 
Первая форма - вещественные числа с фиксированной запятой, 
при которой дробную часть отделяется от целой части точкой. 
Например:
 */
Console.WriteLine(3.2e3);   // по сути равно 3.2 * 10<sup>3</sup> = 3200
Console.WriteLine(1.2E-1);  // равно 1.2 * 10<sup>-1</sup> = 0.12
/*
 * Символьные литералы
*  Символьные литералы представляют одиночные символы. 
*  Символы заключаются в одинарные кавычки.
*  Символьные литералы бывают нескольких видов. 
*  Прежде всего это обычные символы:
 * 
 */
Console.WriteLine('2');
Console.WriteLine('A');
Console.WriteLine('T');
// Специальная группа представляет собой управляющие последовательности.
/*
 * Управляющая последовательность представляет символ, 
 * перед которым ставится слеш. 
 * И данная последовательность интерпретируется определенным образом.
 * Наиболее часто используемые последовательности:
 * '\n' - с новой строки
 * '\t' - табуляция
 * '\' - слеш
 */
/*
 * Еще один способ определения символов представляет использования шестнадцатеричных 
 * кодов ASCII. Для этого в одинарных кавычках указываются символы '\x', 
 * после которых идет шестнадцатеричный код символа из таблицы ASCII.
 * Например, литерал '\x78' представляет символ "x":
 */
Console.WriteLine('\x78');    // x
Console.WriteLine('\x5A');    // Z
Console.WriteLine('\u0420');    // Р
Console.WriteLine('\u0421');    // С

// Строковые литералы, заключаются в двойные кавычки
Console.WriteLine("Это строка строкового литерала");
//Если внутри строки необходимо вывести двойную кавычку,
//то такая внутренняя кавычка предваряется обратным слешем:
Console.WriteLine("Компания \"Рога и копыта\"");
//Также в строках можно использовать управляющие последовательности.
//Например, последовательность '\n' осуществляет перевод на новую строку:
Console.WriteLine("Привет \nмир");
// Это было коротко о литералах
